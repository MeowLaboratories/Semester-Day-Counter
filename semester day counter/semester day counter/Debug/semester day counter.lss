
semester day counter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000058c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000028  00800060  0000058c  00000620  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800088  00800088  00000648  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000648  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000678  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000086e  00000000  00000000  000006fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000001ab  00000000  00000000  00000f6a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ea  00000000  00000000  00001115  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a4  00000000  00000000  00001700  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000219  00000000  00000000  000017a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000023f  00000000  00000000  000019bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001bfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e8       	ldi	r30, 0x8C	; 140
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a8 38       	cpi	r26, 0x88	; 136
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a8 e8       	ldi	r26, 0x88	; 136
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ac 38       	cpi	r26, 0x8C	; 140
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 cb 01 	call	0x396	; 0x396 <main>
  8a:	0c 94 c4 02 	jmp	0x588	; 0x588 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <EEPROM_write>:
int week, day;

void EEPROM_write(unsigned int uiAddress, unsigned char ucData)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE)) ;
  92:	e1 99       	sbic	0x1c, 1	; 28
  94:	fe cf       	rjmp	.-4      	; 0x92 <EEPROM_write>
	
	/* Set up address and data registers */
	EEAR = uiAddress;
  96:	9f bb       	out	0x1f, r25	; 31
  98:	8e bb       	out	0x1e, r24	; 30
	EEDR = ucData;
  9a:	6d bb       	out	0x1d, r22	; 29

	/* Write logical one to EEMWE */
	EECR |= (1<<EEMWE);
  9c:	e2 9a       	sbi	0x1c, 2	; 28
	/* Start eeprom write by setting EEWE */
	EECR |= (1<<EEWE);
  9e:	e1 9a       	sbi	0x1c, 1	; 28
  a0:	08 95       	ret

000000a2 <EEPROM_read>:
}

unsigned char EEPROM_read(unsigned int uiAddress)
{
	/* Wait for completion of previous write */
	while(EECR & (1<<EEWE))
  a2:	e1 99       	sbic	0x1c, 1	; 28
  a4:	fe cf       	rjmp	.-4      	; 0xa2 <EEPROM_read>
	;
	
	/* Set up address register */
	EEAR = uiAddress;
  a6:	9f bb       	out	0x1f, r25	; 31
  a8:	8e bb       	out	0x1e, r24	; 30
	
	/* Start eeprom read by writing EERE */
	EECR |= (1<<EERE);
  aa:	e0 9a       	sbi	0x1c, 0	; 28
	/* Return data from data register */
	return EEDR;
  ac:	8d b3       	in	r24, 0x1d	; 29
}
  ae:	08 95       	ret

000000b0 <init_led>:

void init_led()
{
	PORTB = 0xFF;
  b0:	8f ef       	ldi	r24, 0xFF	; 255
  b2:	88 bb       	out	0x18, r24	; 24
	PORTD = 0;
  b4:	12 ba       	out	0x12, r1	; 18
  b6:	08 95       	ret

000000b8 <janu>:
}

void janu()
{
  b8:	cf 93       	push	r28
  ba:	df 93       	push	r29
	init_led();
  bc:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
	
			PORTB = digit[week/10];
  c0:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
  c4:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
  c8:	ca e0       	ldi	r28, 0x0A	; 10
  ca:	d0 e0       	ldi	r29, 0x00	; 0
  cc:	be 01       	movw	r22, r28
  ce:	0e 94 9c 02 	call	0x538	; 0x538 <__divmodhi4>
  d2:	fb 01       	movw	r30, r22
  d4:	ee 0f       	add	r30, r30
  d6:	ff 1f       	adc	r31, r31
  d8:	e6 59       	subi	r30, 0x96	; 150
  da:	ff 4f       	sbci	r31, 0xFF	; 255
  dc:	80 81       	ld	r24, Z
  de:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000001;
  e0:	81 e0       	ldi	r24, 0x01	; 1
  e2:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e4:	85 ed       	ldi	r24, 0xD5	; 213
  e6:	96 e0       	ldi	r25, 0x06	; 6
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <janu+0x30>
  ec:	00 c0       	rjmp	.+0      	; 0xee <janu+0x36>
  ee:	00 00       	nop
			//PORTD = 0b11111110;
			delay(7);
			
    init_led();
  f0:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
			PORTB = digit[week%10];
  f4:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
  f8:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
  fc:	be 01       	movw	r22, r28
  fe:	0e 94 9c 02 	call	0x538	; 0x538 <__divmodhi4>
 102:	fc 01       	movw	r30, r24
 104:	ee 0f       	add	r30, r30
 106:	ff 1f       	adc	r31, r31
 108:	e6 59       	subi	r30, 0x96	; 150
 10a:	ff 4f       	sbci	r31, 0xFF	; 255
 10c:	80 81       	ld	r24, Z
 10e:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000010;
 110:	82 e0       	ldi	r24, 0x02	; 2
 112:	82 bb       	out	0x12, r24	; 18
 114:	85 ed       	ldi	r24, 0xD5	; 213
 116:	96 e0       	ldi	r25, 0x06	; 6
 118:	01 97       	sbiw	r24, 0x01	; 1
 11a:	f1 f7       	brne	.-4      	; 0x118 <janu+0x60>
 11c:	00 c0       	rjmp	.+0      	; 0x11e <janu+0x66>
 11e:	00 00       	nop
			//PORTD = 0b11111101;
			delay(7);
			
	init_led();
 120:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
			PORTB = word[day];
 124:	e0 91 8a 00 	lds	r30, 0x008A	; 0x80008a <day>
 128:	f0 91 8b 00 	lds	r31, 0x008B	; 0x80008b <day+0x1>
 12c:	ee 0f       	add	r30, r30
 12e:	ff 1f       	adc	r31, r31
 130:	e2 58       	subi	r30, 0x82	; 130
 132:	ff 4f       	sbci	r31, 0xFF	; 255
 134:	80 81       	ld	r24, Z
 136:	88 bb       	out	0x18, r24	; 24
			PORTD = 0b00000100;
 138:	84 e0       	ldi	r24, 0x04	; 4
 13a:	82 bb       	out	0x12, r24	; 18
 13c:	85 ed       	ldi	r24, 0xD5	; 213
 13e:	96 e0       	ldi	r25, 0x06	; 6
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <janu+0x88>
 144:	00 c0       	rjmp	.+0      	; 0x146 <janu+0x8e>
 146:	00 00       	nop
	//		PORTD = 0b11111011;
			delay(7);
			
}
 148:	df 91       	pop	r29
 14a:	cf 91       	pop	r28
 14c:	08 95       	ret

0000014e <show_off>:

void show_off()
{
 14e:	df 92       	push	r13
 150:	ef 92       	push	r14
 152:	ff 92       	push	r15
 154:	0f 93       	push	r16
 156:	1f 93       	push	r17
 158:	cf 93       	push	r28
 15a:	df 93       	push	r29
	init_led();
 15c:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
	//null
	PORTD = 0;
 160:	12 ba       	out	0x12, r1	; 18
	PORTB = 0;
 162:	18 ba       	out	0x18, r1	; 24
 164:	2f e9       	ldi	r18, 0x9F	; 159
 166:	86 e8       	ldi	r24, 0x86	; 134
 168:	91 e0       	ldi	r25, 0x01	; 1
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	80 40       	sbci	r24, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <show_off+0x1c>
 172:	00 c0       	rjmp	.+0      	; 0x174 <show_off+0x26>
 174:	00 00       	nop
	_delay_ms(500);
	
	
	//r
	init_led();
 176:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
	
	PORTD = 0b0000100 ;
 17a:	84 e0       	ldi	r24, 0x04	; 4
 17c:	82 bb       	out	0x12, r24	; 18
	PORTB = rbA[0];
 17e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__data_start>
 182:	88 bb       	out	0x18, r24	; 24
 184:	ef e9       	ldi	r30, 0x9F	; 159
 186:	f6 e8       	ldi	r31, 0x86	; 134
 188:	21 e0       	ldi	r18, 0x01	; 1
 18a:	e1 50       	subi	r30, 0x01	; 1
 18c:	f0 40       	sbci	r31, 0x00	; 0
 18e:	20 40       	sbci	r18, 0x00	; 0
 190:	e1 f7       	brne	.-8      	; 0x18a <show_off+0x3c>
 192:	00 c0       	rjmp	.+0      	; 0x194 <show_off+0x46>
 194:	00 00       	nop
 196:	c2 e3       	ldi	r28, 0x32	; 50
 198:	d0 e0       	ldi	r29, 0x00	; 0
	//rb
	int i = 50;
	while(i--)
	{
		init_led();
		PORTD = 0b00000100 ;
 19a:	68 94       	set
 19c:	ee 24       	eor	r14, r14
 19e:	e2 f8       	bld	r14, 2
		PORTB = rbA[1];
 1a0:	00 e6       	ldi	r16, 0x60	; 96
 1a2:	10 e0       	ldi	r17, 0x00	; 0
		_delay_ms(5);
		
		init_led();
		PORTD = 0b00000010 ;
 1a4:	68 94       	set
 1a6:	ff 24       	eor	r15, r15
 1a8:	f1 f8       	bld	r15, 1
	
	//rb
	int i = 50;
	while(i--)
	{
		init_led();
 1aa:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		PORTD = 0b00000100 ;
 1ae:	e2 ba       	out	0x12, r14	; 18
		PORTB = rbA[1];
 1b0:	f8 01       	movw	r30, r16
 1b2:	82 81       	ldd	r24, Z+2	; 0x02
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	81 ee       	ldi	r24, 0xE1	; 225
 1b8:	94 e0       	ldi	r25, 0x04	; 4
 1ba:	01 97       	sbiw	r24, 0x01	; 1
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <show_off+0x6c>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <show_off+0x72>
 1c0:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 1c2:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		PORTD = 0b00000010 ;
 1c6:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[0];
 1c8:	f8 01       	movw	r30, r16
 1ca:	80 81       	ld	r24, Z
 1cc:	88 bb       	out	0x18, r24	; 24
 1ce:	81 ee       	ldi	r24, 0xE1	; 225
 1d0:	94 e0       	ldi	r25, 0x04	; 4
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <show_off+0x84>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <show_off+0x8a>
 1d8:	00 00       	nop
 1da:	21 97       	sbiw	r28, 0x01	; 1
	PORTB = rbA[0];
	_delay_ms(500);
	
	//rb
	int i = 50;
	while(i--)
 1dc:	31 f7       	brne	.-52     	; 0x1aa <show_off+0x5c>
 1de:	01 e2       	ldi	r16, 0x21	; 33
 1e0:	10 e0       	ldi	r17, 0x00	; 0
	//rb1
	i = 33 ;
	while(i--)
	{
		init_led();
		PORTD = 0b00000100 ;
 1e2:	68 94       	set
 1e4:	dd 24       	eor	r13, r13
 1e6:	d2 f8       	bld	r13, 2
		PORTB = rbA[2];
 1e8:	c0 e6       	ldi	r28, 0x60	; 96
 1ea:	d0 e0       	ldi	r29, 0x00	; 0
		_delay_ms(5);
		
		init_led();
		PORTD = 0b00000010 ;
 1ec:	68 94       	set
 1ee:	ee 24       	eor	r14, r14
 1f0:	e1 f8       	bld	r14, 1
		PORTB = rbA[1];
		_delay_ms(5);
		
		init_led();
		PORTD = 0b00000001 ;
 1f2:	ff 24       	eor	r15, r15
 1f4:	f3 94       	inc	r15
	
	//rb1
	i = 33 ;
	while(i--)
	{
		init_led();
 1f6:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		PORTD = 0b00000100 ;
 1fa:	d2 ba       	out	0x12, r13	; 18
		PORTB = rbA[2];
 1fc:	8c 81       	ldd	r24, Y+4	; 0x04
 1fe:	88 bb       	out	0x18, r24	; 24
 200:	e1 ee       	ldi	r30, 0xE1	; 225
 202:	f4 e0       	ldi	r31, 0x04	; 4
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <show_off+0xb6>
 208:	00 c0       	rjmp	.+0      	; 0x20a <show_off+0xbc>
 20a:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 20c:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		PORTD = 0b00000010 ;
 210:	e2 ba       	out	0x12, r14	; 18
		PORTB = rbA[1];
 212:	8a 81       	ldd	r24, Y+2	; 0x02
 214:	88 bb       	out	0x18, r24	; 24
 216:	81 ee       	ldi	r24, 0xE1	; 225
 218:	94 e0       	ldi	r25, 0x04	; 4
 21a:	01 97       	sbiw	r24, 0x01	; 1
 21c:	f1 f7       	brne	.-4      	; 0x21a <show_off+0xcc>
 21e:	00 c0       	rjmp	.+0      	; 0x220 <show_off+0xd2>
 220:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 222:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		PORTD = 0b00000001 ;
 226:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[0];
 228:	88 81       	ld	r24, Y
 22a:	88 bb       	out	0x18, r24	; 24
 22c:	e1 ee       	ldi	r30, 0xE1	; 225
 22e:	f4 e0       	ldi	r31, 0x04	; 4
 230:	31 97       	sbiw	r30, 0x01	; 1
 232:	f1 f7       	brne	.-4      	; 0x230 <show_off+0xe2>
 234:	00 c0       	rjmp	.+0      	; 0x236 <show_off+0xe8>
 236:	00 00       	nop
 238:	01 50       	subi	r16, 0x01	; 1
 23a:	11 09       	sbc	r17, r1
		_delay_ms(5);
	}
	
	//rb1
	i = 33 ;
	while(i--)
 23c:	e1 f6       	brne	.-72     	; 0x1f6 <show_off+0xa8>
 23e:	01 e2       	ldi	r16, 0x21	; 33
 240:	10 e0       	ldi	r17, 0x00	; 0
	i = 33 ;
	while(i--)
	{
		init_led();
		//PORTD = 0b11111011 ;
		PORTD = 0b00000100 ;
 242:	68 94       	set
 244:	dd 24       	eor	r13, r13
 246:	d2 f8       	bld	r13, 2
		PORTB = rbA[3];
 248:	c0 e6       	ldi	r28, 0x60	; 96
 24a:	d0 e0       	ldi	r29, 0x00	; 0
		_delay_ms(5);
		
		init_led();
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 24c:	68 94       	set
 24e:	ee 24       	eor	r14, r14
 250:	e1 f8       	bld	r14, 1
		PORTB = rbA[2];
		_delay_ms(5);
		
		init_led();
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 252:	ff 24       	eor	r15, r15
 254:	f3 94       	inc	r15
	
	//b10
	i = 33 ;
	while(i--)
	{
		init_led();
 256:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111011 ;
		PORTD = 0b00000100 ;
 25a:	d2 ba       	out	0x12, r13	; 18
		PORTB = rbA[3];
 25c:	8e 81       	ldd	r24, Y+6	; 0x06
 25e:	88 bb       	out	0x18, r24	; 24
 260:	81 ee       	ldi	r24, 0xE1	; 225
 262:	94 e0       	ldi	r25, 0x04	; 4
 264:	01 97       	sbiw	r24, 0x01	; 1
 266:	f1 f7       	brne	.-4      	; 0x264 <show_off+0x116>
 268:	00 c0       	rjmp	.+0      	; 0x26a <show_off+0x11c>
 26a:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 26c:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 270:	e2 ba       	out	0x12, r14	; 18
		PORTB = rbA[2];
 272:	8c 81       	ldd	r24, Y+4	; 0x04
 274:	88 bb       	out	0x18, r24	; 24
 276:	e1 ee       	ldi	r30, 0xE1	; 225
 278:	f4 e0       	ldi	r31, 0x04	; 4
 27a:	31 97       	sbiw	r30, 0x01	; 1
 27c:	f1 f7       	brne	.-4      	; 0x27a <show_off+0x12c>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <show_off+0x132>
 280:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 282:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 286:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[1];
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	88 bb       	out	0x18, r24	; 24
 28c:	81 ee       	ldi	r24, 0xE1	; 225
 28e:	94 e0       	ldi	r25, 0x04	; 4
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <show_off+0x142>
 294:	00 c0       	rjmp	.+0      	; 0x296 <show_off+0x148>
 296:	00 00       	nop
 298:	01 50       	subi	r16, 0x01	; 1
 29a:	11 09       	sbc	r17, r1
		_delay_ms(5);
	}
	
	//b10
	i = 33 ;
	while(i--)
 29c:	e1 f6       	brne	.-72     	; 0x256 <show_off+0x108>
 29e:	01 e2       	ldi	r16, 0x21	; 33
 2a0:	10 e0       	ldi	r17, 0x00	; 0
	i = 33 ;
	while(i--)
	{
		init_led();
		//PORTD = 0b11111011 ;
		PORTD = 0b00000100 ;
 2a2:	68 94       	set
 2a4:	dd 24       	eor	r13, r13
 2a6:	d2 f8       	bld	r13, 2
		PORTB = rbA[4];
 2a8:	c0 e6       	ldi	r28, 0x60	; 96
 2aa:	d0 e0       	ldi	r29, 0x00	; 0
		_delay_ms(5);
		
		init_led();
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 2ac:	68 94       	set
 2ae:	ee 24       	eor	r14, r14
 2b0:	e1 f8       	bld	r14, 1
		PORTB = rbA[3];
		_delay_ms(5);
		
		init_led();
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 2b2:	ff 24       	eor	r15, r15
 2b4:	f3 94       	inc	r15
	
	//101
	i = 33 ;
	while(i--)
	{
		init_led();
 2b6:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111011 ;
		PORTD = 0b00000100 ;
 2ba:	d2 ba       	out	0x12, r13	; 18
		PORTB = rbA[4];
 2bc:	88 85       	ldd	r24, Y+8	; 0x08
 2be:	88 bb       	out	0x18, r24	; 24
 2c0:	e1 ee       	ldi	r30, 0xE1	; 225
 2c2:	f4 e0       	ldi	r31, 0x04	; 4
 2c4:	31 97       	sbiw	r30, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <show_off+0x176>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <show_off+0x17c>
 2ca:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 2cc:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 2d0:	e2 ba       	out	0x12, r14	; 18
		PORTB = rbA[3];
 2d2:	8e 81       	ldd	r24, Y+6	; 0x06
 2d4:	88 bb       	out	0x18, r24	; 24
 2d6:	81 ee       	ldi	r24, 0xE1	; 225
 2d8:	94 e0       	ldi	r25, 0x04	; 4
 2da:	01 97       	sbiw	r24, 0x01	; 1
 2dc:	f1 f7       	brne	.-4      	; 0x2da <show_off+0x18c>
 2de:	00 c0       	rjmp	.+0      	; 0x2e0 <show_off+0x192>
 2e0:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 2e2:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 2e6:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[2];
 2e8:	8c 81       	ldd	r24, Y+4	; 0x04
 2ea:	88 bb       	out	0x18, r24	; 24
 2ec:	e1 ee       	ldi	r30, 0xE1	; 225
 2ee:	f4 e0       	ldi	r31, 0x04	; 4
 2f0:	31 97       	sbiw	r30, 0x01	; 1
 2f2:	f1 f7       	brne	.-4      	; 0x2f0 <show_off+0x1a2>
 2f4:	00 c0       	rjmp	.+0      	; 0x2f6 <show_off+0x1a8>
 2f6:	00 00       	nop
 2f8:	01 50       	subi	r16, 0x01	; 1
 2fa:	11 09       	sbc	r17, r1
		_delay_ms(5);
	}
	
	//101
	i = 33 ;
	while(i--)
 2fc:	e1 f6       	brne	.-72     	; 0x2b6 <show_off+0x168>
 2fe:	c2 e3       	ldi	r28, 0x32	; 50
 300:	d0 e0       	ldi	r29, 0x00	; 0
	i = 50 ;
	while(i--)
	{
		init_led();
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 302:	68 94       	set
 304:	ee 24       	eor	r14, r14
 306:	e1 f8       	bld	r14, 1
		PORTB = rbA[4];
 308:	00 e6       	ldi	r16, 0x60	; 96
 30a:	10 e0       	ldi	r17, 0x00	; 0
		_delay_ms(5);
		
		init_led();
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 30c:	ff 24       	eor	r15, r15
 30e:	f3 94       	inc	r15
	
	//01
	i = 50 ;
	while(i--)
	{
		init_led();
 310:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111101 ;
		PORTD = 0b00000010 ;
 314:	e2 ba       	out	0x12, r14	; 18
		PORTB = rbA[4];
 316:	f8 01       	movw	r30, r16
 318:	80 85       	ldd	r24, Z+8	; 0x08
 31a:	88 bb       	out	0x18, r24	; 24
 31c:	81 ee       	ldi	r24, 0xE1	; 225
 31e:	94 e0       	ldi	r25, 0x04	; 4
 320:	01 97       	sbiw	r24, 0x01	; 1
 322:	f1 f7       	brne	.-4      	; 0x320 <show_off+0x1d2>
 324:	00 c0       	rjmp	.+0      	; 0x326 <show_off+0x1d8>
 326:	00 00       	nop
		_delay_ms(5);
		
		init_led();
 328:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 32c:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[3];
 32e:	f8 01       	movw	r30, r16
 330:	86 81       	ldd	r24, Z+6	; 0x06
 332:	88 bb       	out	0x18, r24	; 24
 334:	81 ee       	ldi	r24, 0xE1	; 225
 336:	94 e0       	ldi	r25, 0x04	; 4
 338:	01 97       	sbiw	r24, 0x01	; 1
 33a:	f1 f7       	brne	.-4      	; 0x338 <show_off+0x1ea>
 33c:	00 c0       	rjmp	.+0      	; 0x33e <show_off+0x1f0>
 33e:	00 00       	nop
 340:	21 97       	sbiw	r28, 0x01	; 1
		_delay_ms(5);
	}
	
	//01
	i = 50 ;
	while(i--)
 342:	31 f7       	brne	.-52     	; 0x310 <show_off+0x1c2>
 344:	c4 e6       	ldi	r28, 0x64	; 100
 346:	d0 e0       	ldi	r29, 0x00	; 0
	i = 100 ;
	while(i--)
	{
		init_led();
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 348:	ff 24       	eor	r15, r15
 34a:	f3 94       	inc	r15
		PORTB = rbA[4];
 34c:	00 e6       	ldi	r16, 0x60	; 96
 34e:	10 e0       	ldi	r17, 0x00	; 0
	
	//1
	i = 100 ;
	while(i--)
	{
		init_led();
 350:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
		//PORTD = 0b11111110 ;
		PORTD = 0b00000001 ;
 354:	f2 ba       	out	0x12, r15	; 18
		PORTB = rbA[4];
 356:	f8 01       	movw	r30, r16
 358:	80 85       	ldd	r24, Z+8	; 0x08
 35a:	88 bb       	out	0x18, r24	; 24
 35c:	81 ee       	ldi	r24, 0xE1	; 225
 35e:	94 e0       	ldi	r25, 0x04	; 4
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <show_off+0x212>
 364:	00 c0       	rjmp	.+0      	; 0x366 <show_off+0x218>
 366:	00 00       	nop
 368:	21 97       	sbiw	r28, 0x01	; 1
		_delay_ms(5);
	}
	
	//1
	i = 100 ;
	while(i--)
 36a:	91 f7       	brne	.-28     	; 0x350 <show_off+0x202>
		PORTD = 0b00000001 ;
		PORTB = rbA[4];
		_delay_ms(5);
	}
	
	init_led();
 36c:	0e 94 58 00 	call	0xb0	; 0xb0 <init_led>
	//null
	PORTD = 0;
 370:	12 ba       	out	0x12, r1	; 18
	PORTB = 0;
 372:	18 ba       	out	0x18, r1	; 24
 374:	9f e9       	ldi	r25, 0x9F	; 159
 376:	e6 e8       	ldi	r30, 0x86	; 134
 378:	f1 e0       	ldi	r31, 0x01	; 1
 37a:	91 50       	subi	r25, 0x01	; 1
 37c:	e0 40       	sbci	r30, 0x00	; 0
 37e:	f0 40       	sbci	r31, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <show_off+0x22c>
 382:	00 c0       	rjmp	.+0      	; 0x384 <show_off+0x236>
 384:	00 00       	nop
	_delay_ms(500);
}
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	1f 91       	pop	r17
 38c:	0f 91       	pop	r16
 38e:	ff 90       	pop	r15
 390:	ef 90       	pop	r14
 392:	df 90       	pop	r13
 394:	08 95       	ret

00000396 <main>:


int main(void)
{
	MCUCSR |= (1 << JTD); //initialization
 396:	84 b7       	in	r24, 0x34	; 52
 398:	80 68       	ori	r24, 0x80	; 128
 39a:	84 bf       	out	0x34, r24	; 52
	MCUCSR |= (1 << JTD);
 39c:	84 b7       	in	r24, 0x34	; 52
 39e:	80 68       	ori	r24, 0x80	; 128
 3a0:	84 bf       	out	0x34, r24	; 52
	
	DDRB = 255;
 3a2:	8f ef       	ldi	r24, 0xFF	; 255
 3a4:	87 bb       	out	0x17, r24	; 23
	DDRD = 255;
 3a6:	81 bb       	out	0x11, r24	; 17
	DDRA = 0;
 3a8:	1a ba       	out	0x1a, r1	; 26
	
	int i = 0;
	
	week = EEPROM_read(100);
 3aa:	84 e6       	ldi	r24, 0x64	; 100
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 51 00 	call	0xa2	; 0xa2 <EEPROM_read>
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__data_end+0x1>
 3b8:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__data_end>
	day = EEPROM_read(101);
 3bc:	85 e6       	ldi	r24, 0x65	; 101
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	0e 94 51 00 	call	0xa2	; 0xa2 <EEPROM_read>
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <day+0x1>
 3ca:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <day>
	
	if(week > 99) week = 1;
 3ce:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__data_end>
 3d2:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__data_end+0x1>
 3d6:	24 36       	cpi	r18, 0x64	; 100
 3d8:	31 05       	cpc	r19, r1
 3da:	34 f0       	brlt	.+12     	; 0x3e8 <main+0x52>
 3dc:	21 e0       	ldi	r18, 0x01	; 1
 3de:	30 e0       	ldi	r19, 0x00	; 0
 3e0:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__data_end+0x1>
 3e4:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__data_end>
	if(day > 4) day = 0;
 3e8:	05 97       	sbiw	r24, 0x05	; 5
 3ea:	24 f0       	brlt	.+8      	; 0x3f4 <main+0x5e>
 3ec:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <day+0x1>
 3f0:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <day>
	
	unsigned long long meow = 0;
	
	show_off();
 3f4:	0e 94 a7 00 	call	0x14e	; 0x14e <show_off>
	_delay_ms(500);
}


int main(void)
{
 3f8:	41 2c       	mov	r4, r1
 3fa:	51 2c       	mov	r5, r1
				  week--;
				  day = 4;
			  }
		  }
		  
			  		  EEPROM_write(100,week);
 3fc:	0f 2e       	mov	r0, r31
 3fe:	f8 e8       	ldi	r31, 0x88	; 136
 400:	ef 2e       	mov	r14, r31
 402:	f0 e0       	ldi	r31, 0x00	; 0
 404:	ff 2e       	mov	r15, r31
 406:	f0 2d       	mov	r31, r0
			  		  EEPROM_write(101,day);
 408:	0a e8       	ldi	r16, 0x8A	; 138
 40a:	10 e0       	ldi	r17, 0x00	; 0
	_delay_ms(500);
}


int main(void)
{
 40c:	0f 2e       	mov	r0, r31
 40e:	fc e0       	ldi	r31, 0x0C	; 12
 410:	6f 2e       	mov	r6, r31
 412:	f0 2d       	mov	r31, r0
 414:	71 2c       	mov	r7, r1
				  day = 0;
			  }
			  else
			  {
				  week--;
				  day = 4;
 416:	68 94       	set
 418:	aa 24       	eor	r10, r10
 41a:	a2 f8       	bld	r10, 2
 41c:	b1 2c       	mov	r11, r1
		  
		  if(day < 0)
		  {  
			  if(week <= 1)
			  {
				  week = 1;
 41e:	cc 24       	eor	r12, r12
 420:	c3 94       	inc	r12
 422:	d1 2c       	mov	r13, r1
	_delay_ms(500);
}


int main(void)
{
 424:	c4 2d       	mov	r28, r4
 426:	d5 2d       	mov	r29, r5
 428:	86 2c       	mov	r8, r6
 42a:	97 2c       	mov	r9, r7
	
	
    while(1)
    {
		for(i = 0 ; i < 12 ; i++) 
			janu();
 42c:	0e 94 5c 00 	call	0xb8	; 0xb8 <janu>
 430:	f1 e0       	ldi	r31, 0x01	; 1
 432:	8f 1a       	sub	r8, r31
 434:	91 08       	sbc	r9, r1
	show_off();
	
	
    while(1)
    {
		for(i = 0 ; i < 12 ; i++) 
 436:	d1 f7       	brne	.-12     	; 0x42c <__FUSE_REGION_LENGTH__+0x2c>
			janu();
	  
      if(PINA & (1 << PA0) && (PINA & (1 << PA1)))
 438:	c8 9b       	sbis	0x19, 0	; 25
 43a:	18 c0       	rjmp	.+48     	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
 43c:	c9 9b       	sbis	0x19, 1	; 25
 43e:	16 c0       	rjmp	.+44     	; 0x46c <__FUSE_REGION_LENGTH__+0x6c>
	  {
		  show_off();
 440:	0e 94 a7 00 	call	0x14e	; 0x14e <show_off>
		  week = 1;
 444:	d0 92 89 00 	sts	0x0089, r13	; 0x800089 <__data_end+0x1>
 448:	c0 92 88 00 	sts	0x0088, r12	; 0x800088 <__data_end>
		  day = 0;
 44c:	40 92 8a 00 	sts	0x008A, r4	; 0x80008a <day>
 450:	50 92 8b 00 	sts	0x008B, r5	; 0x80008b <day+0x1>
		  EEPROM_write(100,week);
 454:	61 e0       	ldi	r22, 0x01	; 1
 456:	84 e6       	ldi	r24, 0x64	; 100
 458:	90 e0       	ldi	r25, 0x00	; 0
 45a:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
		  EEPROM_write(101,day);
 45e:	f8 01       	movw	r30, r16
 460:	60 81       	ld	r22, Z
 462:	85 e6       	ldi	r24, 0x65	; 101
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
 46a:	5d c0       	rjmp	.+186    	; 0x526 <__FUSE_REGION_LENGTH__+0x126>
		  
	  }
	  
	  else if(PINA & (1 << PA0) && !(PINA & (1 << PA1)))
 46c:	c8 9b       	sbis	0x19, 0	; 25
 46e:	27 c0       	rjmp	.+78     	; 0x4be <__FUSE_REGION_LENGTH__+0xbe>
 470:	c9 99       	sbic	0x19, 1	; 25
 472:	25 c0       	rjmp	.+74     	; 0x4be <__FUSE_REGION_LENGTH__+0xbe>
	  {
		  day++;
 474:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <day>
 478:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <day+0x1>
 47c:	01 96       	adiw	r24, 0x01	; 1
 47e:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <day+0x1>
 482:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <day>
		  //janu();
		  
		  if(day > 4)
 486:	05 97       	sbiw	r24, 0x05	; 5
 488:	6c f0       	brlt	.+26     	; 0x4a4 <__FUSE_REGION_LENGTH__+0xa4>
		  {
			week++;
 48a:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
 48e:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
 492:	01 96       	adiw	r24, 0x01	; 1
 494:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__data_end+0x1>
 498:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__data_end>
			day = 0;
 49c:	40 92 8a 00 	sts	0x008A, r4	; 0x80008a <day>
 4a0:	50 92 8b 00 	sts	0x008B, r5	; 0x80008b <day+0x1>
		  }  
		  
		  		  EEPROM_write(100,week);
 4a4:	f7 01       	movw	r30, r14
 4a6:	60 81       	ld	r22, Z
 4a8:	84 e6       	ldi	r24, 0x64	; 100
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
		  		  EEPROM_write(101,day);
 4b0:	f8 01       	movw	r30, r16
 4b2:	60 81       	ld	r22, Z
 4b4:	85 e6       	ldi	r24, 0x65	; 101
 4b6:	90 e0       	ldi	r25, 0x00	; 0
 4b8:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
 4bc:	34 c0       	rjmp	.+104    	; 0x526 <__FUSE_REGION_LENGTH__+0x126>
	  }
	  
	  else if(PINA & (1 << PA1) &&  !(PINA & (1 << PA0)) )
 4be:	c9 9b       	sbis	0x19, 1	; 25
 4c0:	32 c0       	rjmp	.+100    	; 0x526 <__FUSE_REGION_LENGTH__+0x126>
 4c2:	c8 99       	sbic	0x19, 0	; 25
 4c4:	30 c0       	rjmp	.+96     	; 0x526 <__FUSE_REGION_LENGTH__+0x126>
	  {
		  day--;
 4c6:	80 91 8a 00 	lds	r24, 0x008A	; 0x80008a <day>
 4ca:	90 91 8b 00 	lds	r25, 0x008B	; 0x80008b <day+0x1>
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <day+0x1>
 4d4:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <day>
		  
		  if(day < 0)
 4d8:	99 23       	and	r25, r25
 4da:	cc f4       	brge	.+50     	; 0x50e <__FUSE_REGION_LENGTH__+0x10e>
		  {  
			  if(week <= 1)
 4dc:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <__data_end>
 4e0:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <__data_end+0x1>
 4e4:	82 30       	cpi	r24, 0x02	; 2
 4e6:	91 05       	cpc	r25, r1
 4e8:	4c f4       	brge	.+18     	; 0x4fc <__FUSE_REGION_LENGTH__+0xfc>
			  {
				  week = 1;
 4ea:	d0 92 89 00 	sts	0x0089, r13	; 0x800089 <__data_end+0x1>
 4ee:	c0 92 88 00 	sts	0x0088, r12	; 0x800088 <__data_end>
				  day = 0;
 4f2:	40 92 8a 00 	sts	0x008A, r4	; 0x80008a <day>
 4f6:	50 92 8b 00 	sts	0x008B, r5	; 0x80008b <day+0x1>
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__FUSE_REGION_LENGTH__+0x10e>
			  }
			  else
			  {
				  week--;
 4fc:	01 97       	sbiw	r24, 0x01	; 1
 4fe:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__data_end+0x1>
 502:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__data_end>
				  day = 4;
 506:	b0 92 8b 00 	sts	0x008B, r11	; 0x80008b <day+0x1>
 50a:	a0 92 8a 00 	sts	0x008A, r10	; 0x80008a <day>
			  }
		  }
		  
			  		  EEPROM_write(100,week);
 50e:	f7 01       	movw	r30, r14
 510:	60 81       	ld	r22, Z
 512:	84 e6       	ldi	r24, 0x64	; 100
 514:	90 e0       	ldi	r25, 0x00	; 0
 516:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
			  		  EEPROM_write(101,day);
 51a:	f8 01       	movw	r30, r16
 51c:	60 81       	ld	r22, Z
 51e:	85 e6       	ldi	r24, 0x65	; 101
 520:	90 e0       	ldi	r25, 0x00	; 0
 522:	0e 94 49 00 	call	0x92	; 0x92 <EEPROM_write>
 526:	21 96       	adiw	r28, 0x01	; 1
	  }
	  
	  meow++;
	  if(meow >= 14400)
 528:	c0 34       	cpi	r28, 0x40	; 64
 52a:	f8 e3       	ldi	r31, 0x38	; 56
 52c:	df 07       	cpc	r29, r31
 52e:	09 f0       	breq	.+2      	; 0x532 <__FUSE_REGION_LENGTH__+0x132>
 530:	7b cf       	rjmp	.-266    	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
	  {
		  meow = 0;
		  show_off();
 532:	0e 94 a7 00 	call	0x14e	; 0x14e <show_off>
 536:	76 cf       	rjmp	.-276    	; 0x424 <__FUSE_REGION_LENGTH__+0x24>

00000538 <__divmodhi4>:
 538:	97 fb       	bst	r25, 7
 53a:	07 2e       	mov	r0, r23
 53c:	16 f4       	brtc	.+4      	; 0x542 <__divmodhi4+0xa>
 53e:	00 94       	com	r0
 540:	07 d0       	rcall	.+14     	; 0x550 <__divmodhi4_neg1>
 542:	77 fd       	sbrc	r23, 7
 544:	09 d0       	rcall	.+18     	; 0x558 <__divmodhi4_neg2>
 546:	0e 94 b0 02 	call	0x560	; 0x560 <__udivmodhi4>
 54a:	07 fc       	sbrc	r0, 7
 54c:	05 d0       	rcall	.+10     	; 0x558 <__divmodhi4_neg2>
 54e:	3e f4       	brtc	.+14     	; 0x55e <__divmodhi4_exit>

00000550 <__divmodhi4_neg1>:
 550:	90 95       	com	r25
 552:	81 95       	neg	r24
 554:	9f 4f       	sbci	r25, 0xFF	; 255
 556:	08 95       	ret

00000558 <__divmodhi4_neg2>:
 558:	70 95       	com	r23
 55a:	61 95       	neg	r22
 55c:	7f 4f       	sbci	r23, 0xFF	; 255

0000055e <__divmodhi4_exit>:
 55e:	08 95       	ret

00000560 <__udivmodhi4>:
 560:	aa 1b       	sub	r26, r26
 562:	bb 1b       	sub	r27, r27
 564:	51 e1       	ldi	r21, 0x11	; 17
 566:	07 c0       	rjmp	.+14     	; 0x576 <__udivmodhi4_ep>

00000568 <__udivmodhi4_loop>:
 568:	aa 1f       	adc	r26, r26
 56a:	bb 1f       	adc	r27, r27
 56c:	a6 17       	cp	r26, r22
 56e:	b7 07       	cpc	r27, r23
 570:	10 f0       	brcs	.+4      	; 0x576 <__udivmodhi4_ep>
 572:	a6 1b       	sub	r26, r22
 574:	b7 0b       	sbc	r27, r23

00000576 <__udivmodhi4_ep>:
 576:	88 1f       	adc	r24, r24
 578:	99 1f       	adc	r25, r25
 57a:	5a 95       	dec	r21
 57c:	a9 f7       	brne	.-22     	; 0x568 <__udivmodhi4_loop>
 57e:	80 95       	com	r24
 580:	90 95       	com	r25
 582:	bc 01       	movw	r22, r24
 584:	cd 01       	movw	r24, r26
 586:	08 95       	ret

00000588 <_exit>:
 588:	f8 94       	cli

0000058a <__stop_program>:
 58a:	ff cf       	rjmp	.-2      	; 0x58a <__stop_program>
